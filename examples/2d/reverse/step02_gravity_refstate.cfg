[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#
#         ----------
#         |        |
# Ux= 0   |        | Ux= 0
#         |        |
#         |        |
#         ----------
#            Uy=0
#
# Dirichlet boundary conditions
#
# boundary_yneg: Uy = 0
# boundary_xneg: Ux = 0
# boundary_xpos: Uy = 0
base = [pylithapp.cfg]
description = Simple gravity example with reference stresses and zero displacement Dirichlet boundary conditions.
authors = [Brad Aagaard]
keywords = [gravitational body forces, basis order 2, reference state]
arguments = [step02_gravity_refstate.cfg]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation,
    pylith.materials.Elasticity,
    pylith.materials.IsotropicLinearElasticity,
    spatialdata.spatialdb.GravityField,
    pylith.meshio.FieldFilterProject
    ]

# ----------------------------------------------------------------------
# Monitoring and parameter viewing.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/step02_gravity_refstate-parameters.json
problem.progress_monitor.filename = output/step02_gravity_refstate-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step02_gravity_refstate

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Quasistatic problems do not have a well-defined density (inertia)
# scale. For this static simulation, we adjust the time scale and time
# step to give a density scale close to unity.
initial_dt = 1.0*s
start_time = -1.0*s
end_time = 0.0*s
normalizer.relaxation_time = 1.0*s

gravity_field = spatialdata.spatialdb.GravityField
gravity_field.gravity_dir = [0.0, -1.0, 0.0]

defaults.quadrature_order = 2

# Use FieldFilterProject because basis order of a solution subfield > 1
defaults.output_field_filter = pylith.meshio.FieldFilterProject

[pylithapp.problem.solution.subfields.displacement]
basis_order = 2

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# In this simulation we use uniform material properties, so we create
# a single SimpleDB file and use it when we specify the spatial
# database for the auxiliary field for each fault.
#
# The reference stress varies linearly with depth, so we use a
# SimpleDB with two points (data-dim == 1) and linear interpolate
# (query_type == linear).

[pylithapp.problem.materials.slab]
db_auxiliary_field.iohandler.filename = mat_gravity_refstate.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.materials.slab.bulk_rheology]
use_reference_state = True

auxiliary_subfields.reference_stress.basis_order = 1
auxiliary_subfields.reference_strain.basis_order = 0

[pylithapp.problem.materials.plate]
db_auxiliary_field.iohandler.filename = mat_gravity_refstate.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.materials.plate.bulk_rheology]
use_reference_state = True

auxiliary_subfields.reference_stress.basis_order = 1
auxiliary_subfields.reference_strain.basis_order = 0

[pylithapp.problem.materials.wedge]
db_auxiliary_field.iohandler.filename = mat_gravity_refstate.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.materials.wedge.bulk_rheology]
use_reference_state = True

auxiliary_subfields.reference_stress.basis_order = 1
auxiliary_subfields.reference_strain.basis_order = 0


# End of file
