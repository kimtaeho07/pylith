[pylithapp.metadata]
# We add a uniform rate starting at time 1.0*year to the initial values for the
# Dirichlet and Neumann time-dependent boundary conditions in Step 3.
#
#             --->
#          ----------
#          |        |
#        | |        | ^
#        v |        | |
#          |        |
#          ----------
#             <--
#
# Dirichlet boundary conditions
#
# boundary_xneg:
#   Ux = a*y + a*y/4*H(t-1.0*year)
#   Uy = a*x + a*x/4*H(t-1.0*year)
# boundary_yneg:
#   Ux = a*y + a*y/4*H(t-1.0*year)
#   Uy = a*x + z*y/4*H(t-1.0*year)
# boundary_zneg:
#   Uz=0
#
# Neumann boundary conditions
#
# Note that the components are given in terms of the tangential 1 (t =
# z x n), tangential 2 (n x tangential 1) and (outward) normal
# directions.
#
# boundary_xpos:
#   Tt1 = +b + b/4*H(t-1.0*year)
#   Tt2 = 0
#   Tn = 0
# boundary_ypos:
#   Tt1 = -b + b/4*H(t-1.0*year)
#   Tt2 = 0
#   Tn = 0
base = [pylithapp.cfg]
description = Quasistatic simulation with time-dependent simple shear using Dirichlet and Neumann boundary conditions.
authors = [Brad Aagaard]
keywords = [simple shear, time depenent, Dirichlet BC, Neumann BC]
arguments = [step05_sheardisptractrate.cfg]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Quasistatic simulation,
    backward Euler time stepping,
    ILU preconditioner,
    pylith.bc.DirichletTimeDependent,
    pylith.bc.NeumannTimeDependent,
    spatialdata.spatialdb.SimpleDB,
    spatialdata.spatialdb.ZeroDB
    ]


[pylithapp]
# File with version information and parameters (including defaults).
#
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/step05_sheardisptractrate-parameters.json
problem.progress_monitor.filename = output/step05_sheardisptractrate-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step05_sheardisptractrate

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
initial_dt = 1.0*year
start_time = -1.0*year
end_time = 5.0*year

[pylithapp.problem.normalizer]
relaxation_time = 10.0*year


# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# We have three Dirichlet and two Neumann boundary conditions as described above.
bc = [bc_xneg, bc_xpos, bc_yneg, bc_ypos, bc_zneg]
bc.bc_xneg = pylith.bc.DirichletTimeDependent
bc.bc_yneg = pylith.bc.DirichletTimeDependent
bc.bc_xpos = pylith.bc.NeumannTimeDependent
bc.bc_ypos = pylith.bc.NeumannTimeDependent
bc.bc_zneg = pylith.bc.DirichletTimeDependent

# Degrees of freedom:
#   x: 0
#   y: 1
#   z: 2
#
# The 'label' corresponds to the name of the nodeset we created in
# CUBIT/Trelis in bc.jou.

# Dirichlet boundary conditions
#
# Turn on use of initial (default) and rate terms in the
# time-dependent expression using 'use_initial' and 'use_rate'.
[pylithapp.problem.bc.bc_xneg]
constrained_dof = [1]
label = boundary_xneg
use_initial = True
use_rate = True
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.label = Dirichlet BC -x edge
db_auxiliary_field.iohandler.filename = sheardisprate_bc_xneg.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.bc.bc_yneg]
constrained_dof = [0]
label = boundary_yneg
use_initial = True
use_rate = True
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.label = Dirichlet BC -y edge
db_auxiliary_field.iohandler.filename = sheardisprate_bc_yneg.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.bc.bc_zneg]
constrained_dof = [2]
label = boundary_zneg
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC -z boundary


# Neumann boundary conditions
#
# The tractions are uniform, so we use a UniformDB.
[pylithapp.problem.bc.bc_xpos]
label = boundary_xpos
use_initial = True
use_rate = True
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Neumann BC +x edge
db_auxiliary_field.values = [initial_amplitude_tangential_1, initial_amplitude_tangential_2, initial_amplitude_normal, rate_start_time, rate_amplitude_tangential_1, rate_amplitude_tangential_2, rate_amplitude_normal]
db_auxiliary_field.data = [+9.0*MPa, 0.0*MPa, 0.0*MPa, 1.0*year, 2.25*MPa/year, 0.0*MPa/year, 0.0*MPa/year]

[pylithapp.problem.bc.bc_ypos]
label = boundary_ypos
use_initial = True
use_rate = True
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Neumann BC +y edge
db_auxiliary_field.values = [initial_amplitude_tangential_1, initial_amplitude_tangential_2, initial_amplitude_normal, rate_start_time, rate_amplitude_tangential_1, rate_amplitude_tangential_2, rate_amplitude_normal]
db_auxiliary_field.data = [-9.0*MPa, 0.0*MPa, 0.0*MPa, 1.0*year, -2.25*MPa/year, 0.0*MPa/year, 0.0*MPa/year]


# End of file
