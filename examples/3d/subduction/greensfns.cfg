[pylithapp.metadata]
keywords = ["static Green's functions", prescribed slip]
features = [
    pylith.problems.GreensFns,
    pylith.faults.FaultCohesiveImpulses,
    spatialdata.spatialdb.UniformDB,
    ]

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
# Define the interfaces (slab) and provide a fault_id.
[greensfns]
interfaces = [slab]
fault_id = 100

# Switch fault to FaultCohesiveImpulses for generation of Green's functions.
[greensfns.interfaces]
slab = pylith.faults.FaultCohesiveImpulses

[greensfns.interfaces.slab]
# Nodesets corresponding to the fault and its buried edges.
label = fault_slabtop_patch
edge = fault_slabtop_patch_edge

# We must define the quadrature information for fault cells.
# The fault cells are 2D (surface).
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2

# Spatial database for slip impulse amplitude.
db_impulse_amplitude = spatialdata.spatialdb.UniformDB
db_impulse_amplitude.label = Amplitude of fault slip impulses
db_impulse_amplitude.values = [slip]
db_impulse_amplitude.data = [1.0]

# Add impulse amplitude to fault info output.
output.vertex_info_fields = [normal_dir, strike_dir, dip_dir, impulse_amplitude]
output.writer = pylith.meshio.DataWriterHDF5

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Turn off output of state variables for materials.
[greensfns.materials.slab.output]
cell_data_fields = []

[greensfns.materials.wedge.output]
cell_data_fields = []

[greensfns.materials.crust.output]
cell_data_fields = []

[greensfns.materials.mantle.output]
cell_data_fields = []

# End of file

