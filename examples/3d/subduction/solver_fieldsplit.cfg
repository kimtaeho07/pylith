[pylithapp.metadata]
# This file provides an optimized solver, the analogue of LU factorization, for the
# saddle point system arising from problems with a fault. This should be used for
# large production runs.
keywords = [backward Euler, field split preconditioner, Schur complement]
features = [
    Backward Euler time stepping,
    Field split preconditioner,
    Schur complement preconditioner
    ]

[pylithapp.petsc]
ts_type = beuler

# The displacements are solved with algebraic multigrid (ML), and
# the fault tractions with a standard Krylov method since we do not
# explicitly form the Schur complement matrix.
#
#snes_view = true
#ksp_monitor_true_residual = true
pc_type = fieldsplit
pc_use_amat = true
pc_fieldsplit_type = schur
pc_fieldsplit_schur_factorization_type = full
pc_fieldsplit_dm_splits = true
fieldsplit_displacement_ksp_type = preonly
fieldsplit_displacement_pc_type = lu
fieldsplit_lagrange_multiplier_fault_pc_type = jacobi
fieldsplit_lagrange_multiplier_fault_ksp_type = gmres
fieldsplit_lagrange_multiplier_fault_ksp_rtol = 1.0e-11
fieldsplit_lagrange_multiplier_fault_ksp_converged_reason = true

ksp_rtol = 1.0e-8
ksp_atol = 1.0e-12
ksp_max_it = 200
ksp_gmres_restart = 50
ksp_error_if_not_converged = true

# Monitors for debugging
ts_monitor = true
ksp_monitor = true
ksp_converged_reason = true
snes_monitor = true
snes_converged_reason = true
snes_linesearch_monitor = true
#snes_fd = true
#dm_plex_print_fem = 2
#dm_plex_print_l2 = 2

ts_error_if_step_fails = true

#ksp_view = true
#snes_view = true

# End of file
