[pylithapp.metadata]
#
#  y
#  ^
#  |
#   --> x
#             
#           v    v
#         ----------
#        |          |
#        |          | 
#   ---> |          | <---
#        |          |
#        |          |
#         ----------
#           ^    ^
#
# Materials
#   All four blocks use the linear, isotropic elastic material model
#   (mat_elastic.cfg).
#
# Boundary Conditions
#   Roller boundary conditions (pylithapp.cfg); on the positive and
#   negative x-boundaries we prescribe 2.0 m of displacement yielding
#   4 m of axial compression.
#
# boundary_xneg: Ux=-a
# boundary_xpos: Ux=+a
# boundary_yneg: Uy=0
# boundary_ypos: Uy=0
# boundary_zneg: Uz=0
base = [pylithapp.cfg, mat_elastic.cfg]
description = Axial compression in the east-west direction using Dirichlet boundary conditions.
keywords = [axial compression]
arguments = [step01_axialdisp.cfg, mat_elastic.cfg]
version = 2.0.0

features = [
    Static simulation,
    Multigrid preconditioner
    ]

# ----------------------------------------------------------------------
# Output of parameters used and simulation progress.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/step01_axialdisp-parameters.json
problem.progress_monitor.filename = output/step01_axialdisp-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step01_axialdisp

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Define the total time for the simulation and initial time step size.
initial_dt = 5.0*year
start_time = -5.0*year
end_time = 0.0*year


# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# We specify nonzero displacements on the -x and +x boundaries using UniformDB.

# -x face
[pylithapp.problem.bc.bc_xneg]
# The spatial database must contain all 3 components even though we only
# constrain the x component.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC on -x
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y, initial_amplitude_z]
db_auxiliary_field.data = [+2.0*m, 0.0*m, 0.0*m]

# +x face
[pylithapp.problem.bc.bc_xpos]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC on +x
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y, initial_amplitude_z]
db_auxiliary_field.data = [-2.0*m, 0.0*m, 0.0*m]

# Additional BC retain their ZeroDB definitions from pylithapp.cfg.

# End of file
