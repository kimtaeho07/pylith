// -*- C++ -*-
//
// ======================================================================
//
// Brad T. Aagaard, U.S. Geological Survey
// Charles A. Williams, GNS Science
// Matthew G. Knepley, University of Chicago
//
// This code was developed as part of the Computational Infrastructure
// for Geodynamics (http://geodynamics.org).
//
// Copyright (c) 2010-2017 University of California, Davis
//
// See COPYING for license information.
//
// ======================================================================
//

#if !defined(pylith_topology_field_hh)
#error "Field.icc must be included only from Field.hh"
#else

#include "pylith/utils/error.hh" // USES PYLITH_CHECK_ERROR

// Get local PetscSection.
inline
PetscSection
pylith::topology::Field::localSection(void) const {
    PetscSection s = NULL;
    if (_dm) {
        PetscErrorCode err = DMGetSection(_dm, &s);PYLITH_CHECK_ERROR(err);
    } // if
    return s;
}


// Get global PetscSection.
inline
PetscSection
pylith::topology::Field::globalSection(void) const {
    PetscSection s = NULL;
    if (_dm) {
        PetscErrorCode err = DMGetGlobalSection(_dm, &s);PYLITH_CHECK_ERROR(err);
    } // if
    return s;
}


// Get local vector.
inline
PetscVec
pylith::topology::Field::localVector(void) const {
    return _localVec;
}


// Get global vector.
inline
PetscVec
pylith::topology::Field::globalVector(void) const {
    return _globalVec;
}


// Get global vector without constrained degrees of freedom for output.
inline
PetscVec
pylith::topology::Field::outputVector(void) const {
    return _outputVec;
}


// Get mesh associated with field.
inline
const
pylith::topology::Mesh&
pylith::topology::Field::mesh(void) const {
    return _mesh;
}


inline
PetscDM
pylith::topology::Field::dmMesh(void) const {
    return _dm;
}


// Get label for field.
inline
const char*
pylith::topology::Field::getLabel(void) const {
    return _label.c_str();
}


#endif

// End of file
